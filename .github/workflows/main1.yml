name: Initialize PR Creator Points

on:
  workflow_dispatch:  # Manual trigger only
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  initialize-points:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install PyGithub

      - name: Generate PR creator points file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 <<'EOF'
          import os
          import json
          from datetime import datetime
          from github import Github

          # Initialize GitHub connection
          g = Github(os.environ['GITHUB_TOKEN'])
          repo = g.get_repo(os.environ['GITHUB_REPOSITORY'])

          # Get all PR creators
          pr_creators = {}
          for pr in repo.get_pulls(state='all'):  # Includes both open and closed PRs
              username = pr.user.login
              if username not in pr_creators:
                  pr_creators[username] = {
                      "points": 0,  # Initialize with 0 points
                      "first_pr_date": pr.created_at.isoformat(),
                      "pr_count": 0
                  }
              pr_creators[username]["pr_count"] += 1

          # Create the points data structure
          points_data = {
              "users": {user: data["points"] for user, data in pr_creators.items()},
              "metadata": {
                  "generated_at": datetime.now().isoformat(),
                  "total_users": len(pr_creators),
                  "total_prs": sum(data["pr_count"] for data in pr_creators.values())
              },
              "history": [
                  {
                      "username": user,
                      "points": 0,
                      "date": data["first_pr_date"],
                      "reason": "Initial PR detected"
                  } 
                  for user, data in pr_creators.items()
              ]
          }

          # Write to points.json
          with open('points.json', 'w') as f:
              json.dump(points_data, f, indent=2)

          # Commit and push the file
          os.system('git config --global user.email "actions@github.com"')
          os.system('git config --global user.name "GitHub Actions"')
          os.system('git add points.json')
          os.system('git commit -m "Initialize PR creator points"')
          os.system('git push')
          EOF
